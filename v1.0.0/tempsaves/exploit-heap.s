	.file	"heap.c"
	.text
.Ltext0:
	.file 0 "/home/user/Lab/programming/heap" "heap/heap.c"
	.globl	halloc_heap_state
	.bss
	.align 32
	.type	halloc_heap_state, @object
	.size	halloc_heap_state, 968
halloc_heap_state:
	.zero	968
	.text
	.globl	abortError
	.type	abortError, @function
abortError:
.LFB6:
	.file 1 "heap/heap.c"
	.loc 1 69 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	.loc 1 70 2
	movq	stderr(%rip), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	fputs@PLT
	.loc 1 71 2
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	perror@PLT
	.loc 1 72 2
	movl	$10, %edi
	call	putchar@PLT
	.loc 1 73 2
	call	abort@PLT
	.cfi_endproc
.LFE6:
	.size	abortError, .-abortError
	.section	.rodata
.LC0:
	.string	"couldn't not extend the heap"
	.text
	.globl	extendHeap
	.type	extendHeap, @function
extendHeap:
.LFB7:
	.loc 1 77 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	.loc 1 78 16
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	leaq	432+halloc_heap_state(%rip), %rax
	movq	%rax, %rdi
	call	mmem_extend@PLT
	movl	%eax, -4(%rbp)
	.loc 1 79 4
	cmpl	$2, -4(%rbp)
	jne	.L3
	.loc 1 81 3
	leaq	.LC0(%rip), %rax
	movq	%rax, %rdi
	call	stringlength@PLT
	movq	%rax, %rdx
	leaq	.LC0(%rip), %rax
	movq	%rax, %rsi
	leaq	464+halloc_heap_state(%rip), %rax
	movq	%rax, %rdi
	call	memcopy@PLT
.L3:
	.loc 1 83 9
	movl	-4(%rbp), %eax
	.loc 1 84 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	extendHeap, .-extendHeap
	.globl	initHeap
	.type	initHeap, @function
initHeap:
.LFB8:
	.loc 1 87 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	.loc 1 87 1
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 88 29
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	mmem_createMemorySpace@PLT
	movq	-48(%rbp), %rax
	movq	-40(%rbp), %rdx
	movq	%rax, 432+halloc_heap_state(%rip)
	movq	%rdx, 440+halloc_heap_state(%rip)
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	movq	%rax, 448+halloc_heap_state(%rip)
	movq	%rdx, 456+halloc_heap_state(%rip)
	.loc 1 89 59
	movq	440+halloc_heap_state(%rip), %rax
	.loc 1 89 33
	movq	%rax, halloc_heap_state(%rip)
	.loc 1 90 61
	movq	440+halloc_heap_state(%rip), %rax
	.loc 1 90 35
	movq	%rax, 8+halloc_heap_state(%rip)
	.loc 1 91 1
	nop
	movq	-8(%rbp), %rax
	subq	%fs:40, %rax
	je	.L6
	call	__stack_chk_fail@PLT
.L6:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	initHeap, .-initHeap
	.globl	add_heap_chunk
	.type	add_heap_chunk, @function
add_heap_chunk:
.LFB9:
	.loc 1 94 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	.loc 1 95 22
	movq	424+halloc_heap_state(%rip), %rax
	.loc 1 95 4
	cmpq	$49, %rax
	jg	.L9
	.loc 1 97 45
	movq	424+halloc_heap_state(%rip), %rax
	.loc 1 97 58
	addq	$2, %rax
	leaq	0(,%rax,8), %rcx
	leaq	8+halloc_heap_state(%rip), %rdx
	movq	-8(%rbp), %rax
	movq	%rax, (%rcx,%rdx)
	.loc 1 98 20
	movq	424+halloc_heap_state(%rip), %rax
	.loc 1 98 31
	addq	$1, %rax
	movq	%rax, 424+halloc_heap_state(%rip)
.L9:
	.loc 1 101 1
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	add_heap_chunk, .-add_heap_chunk
	.section	.rodata
.LC1:
	.string	"The heap starting at <%p>\n"
	.align 8
.LC2:
	.string	"\tchunk [%lu] <%p-%p> (size=%lu, prev_size=%lu, used=%u, alloc_base=%p, fd=%p, bk=%p)\n"
.LC3:
	.string	"\tWilderness pointer : <%p>\n"
.LC4:
	.string	"End of the heap (size=%lu)\n"
	.text
	.globl	print_heap
	.type	print_heap, @function
print_heap:
.LFB10:
	.loc 1 104 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movl	%edi, %eax
	movw	%ax, -36(%rbp)
	.loc 1 105 2
	movq	halloc_heap_state(%rip), %rax
	movq	%rax, %rsi
	leaq	.LC1(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
.LBB2:
	.loc 1 106 12
	movq	$0, -24(%rbp)
	.loc 1 106 2
	jmp	.L11
.L13:
.LBB3:
	.loc 1 108 11
	movq	-24(%rbp), %rax
	addq	$2, %rax
	leaq	0(,%rax,8), %rdx
	leaq	8+halloc_heap_state(%rip), %rax
	movq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 109 9
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 110 8
	movq	-16(%rbp), %rax
	movzbl	25(%rax), %eax
	movb	%al, -25(%rbp)
	.loc 1 111 3
	movq	-16(%rbp), %rax
	movq	48(%rax), %r9
	movq	-16(%rbp), %rax
	movq	40(%rax), %r8
	movq	-16(%rbp), %rax
	movq	32(%rax), %rdi
	movsbl	-25(%rbp), %esi
	movq	-16(%rbp), %rax
	movq	16(%rax), %r11
	.loc 1 111 157
	movq	-24(%rbp), %rax
	addq	$2, %rax
	leaq	0(,%rax,8), %rdx
	leaq	8+halloc_heap_state(%rip), %rax
	movq	(%rdx,%rax), %rdx
	.loc 1 111 3
	movq	-8(%rbp), %rax
	leaq	(%rdx,%rax), %rcx
	movq	-24(%rbp), %rax
	addq	$2, %rax
	leaq	0(,%rax,8), %rdx
	leaq	8+halloc_heap_state(%rip), %rax
	movq	(%rdx,%rax), %rdx
	movq	-8(%rbp), %r10
	movq	-24(%rbp), %rax
	pushq	%r9
	pushq	%r8
	pushq	%rdi
	pushq	%rsi
	movq	%r11, %r9
	movq	%r10, %r8
	movq	%rax, %rsi
	leaq	.LC2(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	addq	$32, %rsp
	.loc 1 112 5
	cmpw	$0, -36(%rbp)
	je	.L12
	.loc 1 114 41
	movq	-24(%rbp), %rax
	addq	$2, %rax
	leaq	0(,%rax,8), %rdx
	leaq	8+halloc_heap_state(%rip), %rax
	movq	(%rdx,%rax), %rax
	.loc 1 114 4
	movq	-8(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	print_buffer@PLT
.L12:
.LBE3:
	.loc 1 106 56 discriminator 2
	addq	$1, -24(%rbp)
.L11:
	.loc 1 106 41 discriminator 1
	movq	424+halloc_heap_state(%rip), %rax
	.loc 1 106 22 discriminator 1
	cmpq	%rax, -24(%rbp)
	jb	.L13
.LBE2:
	.loc 1 118 2
	movq	8+halloc_heap_state(%rip), %rax
	movq	%rax, %rsi
	leaq	.LC3(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 119 58
	movq	8+halloc_heap_state(%rip), %rax
	.loc 1 119 91
	movq	halloc_heap_state(%rip), %rdx
	.loc 1 119 2
	subq	%rdx, %rax
	movq	%rax, %rsi
	leaq	.LC4(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 120 1
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	print_heap, .-print_heap
	.globl	chunk_end_wilderness_offset
	.type	chunk_end_wilderness_offset, @function
chunk_end_wilderness_offset:
.LFB11:
	.loc 1 122 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)
	.loc 1 123 41
	movq	8+halloc_heap_state(%rip), %rax
	.loc 1 123 17
	movq	%rax, %rdx
	.loc 1 123 59
	movq	-24(%rbp), %rax
	.loc 1 123 57
	subq	%rax, %rdx
	.loc 1 123 79
	movq	-24(%rbp), %rax
	movq	(%rax), %rcx
	.loc 1 123 8
	movq	%rdx, %rax
	subq	%rcx, %rax
	movq	%rax, -8(%rbp)
	.loc 1 124 9
	movq	-8(%rbp), %rax
	.loc 1 125 1
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	chunk_end_wilderness_offset, .-chunk_end_wilderness_offset
	.globl	empty_bin_list
	.type	empty_bin_list, @function
empty_bin_list:
.LFB12:
	.loc 1 128 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	.loc 1 129 10
	movq	halloc_heap_state(%rip), %rax
	movq	%rax, -8(%rbp)
	.loc 1 131 7
	jmp	.L17
.L20:
	.loc 1 133 9
	movq	-8(%rbp), %rax
	movzbl	25(%rax), %eax
	.loc 1 133 5
	testb	%al, %al
	jne	.L18
	.loc 1 135 10
	movl	$0, %eax
	jmp	.L19
.L18:
	.loc 1 137 43
	movq	-8(%rbp), %rax
	movq	(%rax), %rdx
	.loc 1 137 20
	movq	-8(%rbp), %rax
	.loc 1 137 31
	addq	%rdx, %rax
	.loc 1 137 7
	movq	%rax, -8(%rbp)
.L17:
	.loc 1 131 41
	movq	8+halloc_heap_state(%rip), %rax
	.loc 1 131 20
	cmpq	%rax, -8(%rbp)
	jb	.L20
	.loc 1 139 8
	movl	$1, %eax
.L19:
	.loc 1 140 1
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	empty_bin_list, .-empty_bin_list
	.globl	first_bin_list
	.type	first_bin_list, @function
first_bin_list:
.LFB13:
	.loc 1 144 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	.loc 1 145 5
	movl	$0, %eax
	call	empty_bin_list
	.loc 1 145 4
	testb	%al, %al
	je	.L22
	.loc 1 147 9
	movl	$0, %eax
	jmp	.L23
.L22:
	.loc 1 149 10
	movq	halloc_heap_state(%rip), %rax
	movq	%rax, -8(%rbp)
	.loc 1 151 7
	jmp	.L24
.L26:
	.loc 1 153 9
	movq	-8(%rbp), %rax
	movzbl	25(%rax), %eax
	.loc 1 153 5
	testb	%al, %al
	jne	.L25
	.loc 1 153 27 discriminator 1
	movq	-8(%rbp), %rax
	movq	48(%rax), %rax
	.loc 1 153 21 discriminator 1
	testq	%rax, %rax
	jne	.L25
	.loc 1 155 11
	movq	-8(%rbp), %rax
	jmp	.L23
.L25:
	.loc 1 157 43
	movq	-8(%rbp), %rax
	movq	(%rax), %rdx
	.loc 1 157 20
	movq	-8(%rbp), %rax
	.loc 1 157 31
	addq	%rdx, %rax
	.loc 1 157 7
	movq	%rax, -8(%rbp)
.L24:
	.loc 1 151 41
	movq	8+halloc_heap_state(%rip), %rax
	.loc 1 151 20
	cmpq	%rax, -8(%rbp)
	jb	.L26
	.loc 1 159 8
	movl	$0, %eax
.L23:
	.loc 1 161 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	first_bin_list, .-first_bin_list
	.section	.rodata
.LC5:
	.string	"Bin list is empty"
.LC6:
	.string	"binlist end = %p\n"
.LC7:
	.string	"binlist : %p\n"
	.text
	.globl	print_bin_list
	.type	print_bin_list, @function
print_bin_list:
.LFB14:
	.loc 1 164 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	.loc 1 165 16
	movl	$0, %eax
	call	first_bin_list
	movq	%rax, -8(%rbp)
	.loc 1 167 4
	cmpq	$0, -8(%rbp)
	jne	.L30
	.loc 1 169 3
	leaq	.LC5(%rip), %rax
	movq	%rax, %rdi
	call	puts@PLT
	.loc 1 170 3
	jmp	.L27
.L33:
	.loc 1 175 9
	movq	-8(%rbp), %rax
	movzbl	25(%rax), %eax
	.loc 1 175 5
	testb	%al, %al
	jne	.L31
	.loc 1 177 10
	movq	-8(%rbp), %rax
	movq	40(%rax), %rax
	.loc 1 177 6
	testq	%rax, %rax
	jne	.L32
	.loc 1 179 5
	movq	-8(%rbp), %rax
	movq	%rax, %rsi
	leaq	.LC6(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 180 5
	jmp	.L27
.L32:
	.loc 1 184 5
	movq	-8(%rbp), %rax
	movq	%rax, %rsi
	leaq	.LC7(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 186 8
	movq	-8(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -8(%rbp)
	jmp	.L30
.L31:
	.loc 1 192 44
	movq	-8(%rbp), %rax
	movq	(%rax), %rdx
	.loc 1 192 21
	movq	-8(%rbp), %rax
	.loc 1 192 32
	addq	%rdx, %rax
	.loc 1 192 8
	movq	%rax, -8(%rbp)
.L30:
	.loc 1 173 41
	movq	8+halloc_heap_state(%rip), %rax
	.loc 1 173 20
	cmpq	%rax, -8(%rbp)
	jb	.L33
.L27:
	.loc 1 197 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE14:
	.size	print_bin_list, .-print_bin_list
	.globl	bin_list_last
	.type	bin_list_last, @function
bin_list_last:
.LFB15:
	.loc 1 203 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	.loc 1 204 16
	movl	$0, %eax
	call	first_bin_list
	movq	%rax, -8(%rbp)
	.loc 1 207 5
	movl	$0, %eax
	call	empty_bin_list
	.loc 1 207 4
	testb	%al, %al
	je	.L35
	.loc 1 209 9
	movl	$0, %eax
	jmp	.L36
.L35:
	.loc 1 214 9
	movq	-8(%rbp), %rax
	movzbl	25(%rax), %eax
	.loc 1 214 5
	testb	%al, %al
	jne	.L37
	.loc 1 216 10
	movq	-8(%rbp), %rax
	movq	40(%rax), %rax
	.loc 1 216 6
	testq	%rax, %rax
	jne	.L38
	.loc 1 218 12
	movq	-8(%rbp), %rax
	jmp	.L36
.L38:
	.loc 1 220 8
	movq	-8(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -8(%rbp)
	jmp	.L35
.L37:
	.loc 1 224 44
	movq	-8(%rbp), %rax
	movq	(%rax), %rdx
	.loc 1 224 21
	movq	-8(%rbp), %rax
	.loc 1 224 32
	addq	%rdx, %rax
	.loc 1 224 8
	movq	%rax, -8(%rbp)
	.loc 1 214 5
	jmp	.L35
.L36:
	.loc 1 227 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE15:
	.size	bin_list_last, .-bin_list_last
	.globl	create_heap
	.type	create_heap, @function
create_heap:
.LFB16:
	.loc 1 230 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$992, %rsp
	movq	%rdi, -984(%rbp)
	.loc 1 230 1
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 233 2
	leaq	-976(%rbp), %rax
	addq	$432, %rax
	movl	$4, %edx
	movl	$0, %esi
	movq	%rax, %rdi
	call	memfill@PLT
	.loc 1 234 20
	movl	$0, -544(%rbp)
	.loc 1 236 21
	movq	$0, -552(%rbp)
	.loc 1 237 20
	movq	$0, -976(%rbp)
	.loc 1 238 22
	movq	$0, -968(%rbp)
	.loc 1 239 17
	movq	$0, -960(%rbp)
	.loc 1 240 12
	movq	-984(%rbp), %rax
	movq	%rax, %rdi
	leaq	-976(%rbp), %rax
	movl	$121, %edx
	movq	%rax, %rsi
	movq	%rdx, %rcx
	rep movsq
	.loc 1 241 1
	movq	-8(%rbp), %rax
	subq	%fs:40, %rax
	je	.L42
	call	__stack_chk_fail@PLT
.L42:
	movq	-984(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE16:
	.size	create_heap, .-create_heap
	.globl	find_space_in_bins
	.type	find_space_in_bins, @function
find_space_in_bins:
.LFB17:
	.loc 1 244 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$24, %rsp
	movq	%rdi, -24(%rbp)
	.loc 1 247 5
	movl	$0, %eax
	call	empty_bin_list
	.loc 1 247 4
	testb	%al, %al
	je	.L44
	.loc 1 249 9
	movl	$0, %eax
	jmp	.L45
.L44:
	.loc 1 252 8
	movl	$0, %eax
	call	first_bin_list
	movq	%rax, -8(%rbp)
	.loc 1 255 7
	jmp	.L46
.L51:
	.loc 1 257 9
	movq	-8(%rbp), %rax
	movzbl	25(%rax), %eax
	.loc 1 257 5
	testb	%al, %al
	jne	.L47
	.loc 1 260 11
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	.loc 1 260 18
	subq	$56, %rax
	.loc 1 260 6
	cmpq	%rax, -24(%rbp)
	ja	.L48
	.loc 1 262 8
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	chunk_end_wilderness_offset
	.loc 1 262 7
	testq	%rax, %rax
	jne	.L49
	.loc 1 264 39
	movq	8+halloc_heap_state(%rip), %rdx
	.loc 1 264 46
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	.loc 1 264 39
	movl	$57, %ecx
	subq	%rax, %rcx
	leaq	(%rdx,%rcx), %rax
	movq	%rax, 8+halloc_heap_state(%rip)
.L49:
	.loc 1 266 12
	movq	-8(%rbp), %rax
	jmp	.L45
.L48:
	.loc 1 269 10
	movq	-8(%rbp), %rax
	movq	40(%rax), %rax
	.loc 1 269 6
	testq	%rax, %rax
	jne	.L50
	.loc 1 271 11
	movl	$0, %eax
	jmp	.L45
.L50:
	.loc 1 274 8
	movq	-8(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -8(%rbp)
	jmp	.L46
.L47:
	.loc 1 279 44
	movq	-8(%rbp), %rax
	movq	(%rax), %rdx
	.loc 1 279 21
	movq	-8(%rbp), %rax
	.loc 1 279 32
	addq	%rdx, %rax
	.loc 1 279 8
	movq	%rax, -8(%rbp)
.L46:
	.loc 1 255 41
	movq	8+halloc_heap_state(%rip), %rax
	.loc 1 255 20
	cmpq	%rax, -8(%rbp)
	jb	.L51
	.loc 1 282 8
	movl	$0, %eax
.L45:
	.loc 1 283 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE17:
	.size	find_space_in_bins, .-find_space_in_bins
	.globl	find_space
	.type	find_space, @function
find_space:
.LFB18:
	.loc 1 292 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	.loc 1 298 8
	movq	-40(%rbp), %rax
	addq	$56, %rax
	movq	%rax, -16(%rbp)
	.loc 1 299 25
	movq	-40(%rbp), %rax
	movq	%rax, %rdi
	call	find_space_in_bins
	movq	%rax, -8(%rbp)
	.loc 1 300 8
	movq	-48(%rbp), %rax
	movq	$0, (%rax)
	.loc 1 303 4
	cmpq	$0, -8(%rbp)
	jne	.L53
	.loc 1 305 6
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	extendHeap
	.loc 1 305 5
	cmpq	$2, %rax
	jne	.L54
	.loc 1 307 10
	movl	$0, %eax
	jmp	.L55
.L54:
	.loc 1 310 15
	movq	8+halloc_heap_state(%rip), %rax
	movq	%rax, -24(%rbp)
	.loc 1 311 36
	movq	8+halloc_heap_state(%rip), %rdx
	movq	-16(%rbp), %rax
	addq	%rdx, %rax
	movq	%rax, 8+halloc_heap_state(%rip)
	jmp	.L56
.L53:
	.loc 1 316 15
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)
	.loc 1 317 9
	movq	-48(%rbp), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, (%rax)
.L56:
	.loc 1 319 9
	movq	-24(%rbp), %rax
.L55:
	.loc 1 320 1
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE18:
	.size	find_space, .-find_space
	.globl	heap_allocate
	.type	heap_allocate, @function
heap_allocate:
.LFB19:
	.loc 1 324 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	movq	%rdi, -88(%rbp)
	.loc 1 324 1
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 330 29
	movl	432+halloc_heap_state(%rip), %eax
	.loc 1 330 4
	cmpl	$1, %eax
	je	.L58
	.loc 1 332 3
	movl	$0, %eax
	call	initHeap
.L58:
	.loc 1 335 16
	leaq	-80(%rbp), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	find_space
	movq	%rax, -72(%rbp)
	.loc 1 336 4
	cmpq	$0, -72(%rbp)
	jne	.L59
	.loc 1 338 9
	movl	$0, %eax
	jmp	.L64
.L59:
	.loc 1 341 24
	movq	-88(%rbp), %rax
	addq	$56, %rax
	.loc 1 341 18
	movq	%rax, -64(%rbp)
	.loc 1 342 5
	movq	-80(%rbp), %rax
	.loc 1 342 4
	testq	%rax, %rax
	jne	.L61
	.loc 1 346 3
	movq	-72(%rbp), %rax
	movq	%rax, %rdi
	call	add_heap_chunk
	jmp	.L62
.L61:
	.loc 1 350 29
	movq	-80(%rbp), %rax
	movq	(%rax), %rax
	.loc 1 350 19
	movq	%rax, -64(%rbp)
	.loc 1 351 16
	movq	-80(%rbp), %rax
	movq	40(%rax), %rax
	.loc 1 351 7
	testq	%rax, %rax
	je	.L63
	.loc 1 351 33 discriminator 1
	movq	-80(%rbp), %rdx
	.loc 1 351 14 discriminator 1
	movq	-80(%rbp), %rax
	movq	40(%rax), %rax
	.loc 1 351 33 discriminator 1
	movq	48(%rdx), %rdx
	.loc 1 351 23 discriminator 1
	movq	%rdx, 48(%rax)
.L63:
	.loc 1 351 52 discriminator 3
	movq	-80(%rbp), %rax
	movq	48(%rax), %rax
	.loc 1 351 43 discriminator 3
	testq	%rax, %rax
	je	.L62
	.loc 1 351 33 discriminator 4
	movq	-80(%rbp), %rdx
	.loc 1 351 14 discriminator 4
	movq	-80(%rbp), %rax
	movq	48(%rax), %rax
	.loc 1 351 33 discriminator 4
	movq	40(%rdx), %rdx
	.loc 1 351 23 discriminator 4
	movq	%rdx, 40(%rax)
.L62:
	.loc 1 354 18
	movq	$0, -24(%rbp)
	.loc 1 354 17
	movq	$0, -16(%rbp)
	.loc 1 354 19
	movb	$1, -39(%rbp)
	.loc 1 354 51
	movq	$0, -48(%rbp)
	.loc 1 354 77
	movb	$1, -40(%rbp)
	.loc 1 355 24
	movq	$0, -32(%rbp)
	.loc 1 357 2
	leaq	-64(%rbp), %rcx
	movq	-72(%rbp), %rax
	movl	$56, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	memcopy@PLT
	.loc 1 359 18
	movq	-72(%rbp), %rax
	.loc 1 359 37
	addq	$56, %rax
.L64:
	.loc 1 360 1 discriminator 1
	movq	-8(%rbp), %rdx
	subq	%fs:40, %rdx
	je	.L65
	.loc 1 360 1 is_stmt 0
	call	__stack_chk_fail@PLT
.L65:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE19:
	.size	heap_allocate, .-heap_allocate
	.globl	heap_free
	.type	heap_free, @function
heap_free:
.LFB20:
	.loc 1 363 1 is_stmt 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$40, %rsp
	movq	%rdi, -40(%rbp)
	.loc 1 369 29
	movq	-40(%rbp), %rax
	.loc 1 369 40
	subq	$56, %rax
	.loc 1 369 8
	movq	%rax, -16(%rbp)
	.loc 1 370 47
	movq	-16(%rbp), %rax
	movq	(%rax), %rdx
	.loc 1 370 20
	movq	-16(%rbp), %rax
	.loc 1 370 33
	addq	%rdx, %rax
	.loc 1 370 7
	movq	%rax, -8(%rbp)
	.loc 1 372 24
	movq	$0, -24(%rbp)
	.loc 1 374 6
	movl	$0, %eax
	call	empty_bin_list
	.loc 1 374 5
	xorl	$1, %eax
	.loc 1 374 4
	testb	%al, %al
	je	.L67
	.loc 1 376 28
	movl	$0, %eax
	call	bin_list_last
	movq	%rax, -24(%rbp)
	.loc 1 378 29
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, 40(%rax)
.L67:
	.loc 1 399 14
	movq	-16(%rbp), %rax
	movb	$0, 25(%rax)
	.loc 1 400 12
	movq	-16(%rbp), %rax
	movq	$0, 40(%rax)
	.loc 1 401 12
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 404 25
	movq	-16(%rbp), %rax
	movq	(%rax), %rdx
	.loc 1 404 18
	movq	-8(%rbp), %rax
	movq	%rdx, 16(%rax)
	.loc 1 405 25
	movq	-16(%rbp), %rax
	movzbl	25(%rax), %edx
	.loc 1 405 18
	movq	-8(%rbp), %rax
	movb	%dl, 24(%rax)
	.loc 1 407 1
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE20:
	.size	heap_free, .-heap_free
	.section	.rodata
	.align 8
.LC8:
	.string	"Cannot realloc a lower size chunk"
	.text
	.globl	heap_realloc
	.type	heap_realloc, @function
heap_realloc:
.LFB21:
	.loc 1 412 1
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$112, %rsp
	movq	%rdi, -104(%rbp)
	movq	%rsi, -112(%rbp)
	.loc 1 412 1
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 413 45
	movq	-104(%rbp), %rax
	.loc 1 413 56
	subq	$56, %rax
	.loc 1 413 10
	movq	%rax, -80(%rbp)
	.loc 1 419 11
	movq	-112(%rbp), %rax
	leaq	56(%rax), %rdx
	.loc 1 419 44
	movq	-80(%rbp), %rax
	movq	(%rax), %rax
	.loc 1 419 4
	cmpq	%rax, %rdx
	jnb	.L69
	.loc 1 421 3
	leaq	.LC8(%rip), %rax
	movq	%rax, %rdi
	call	stringlength@PLT
	movq	%rax, %rdx
	leaq	.LC8(%rip), %rax
	movq	%rax, %rsi
	leaq	464+halloc_heap_state(%rip), %rax
	movq	%rax, %rdi
	call	memcopy@PLT
	.loc 1 422 9
	movl	$0, %eax
	jmp	.L79
.L69:
	.loc 1 426 11
	movq	-80(%rbp), %rax
	movq	%rax, %rdi
	call	chunk_end_wilderness_offset
	movq	%rax, -72(%rbp)
	.loc 1 429 4
	cmpq	$0, -72(%rbp)
	jne	.L71
	.loc 1 431 15
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	.loc 1 432 36
	movq	8+halloc_heap_state(%rip), %rdx
	.loc 1 432 78
	movq	-80(%rbp), %rax
	movq	(%rax), %rcx
	.loc 1 432 63
	movq	-112(%rbp), %rax
	subq	%rcx, %rax
	addq	$56, %rax
	.loc 1 432 36
	addq	%rdx, %rax
	movq	%rax, 8+halloc_heap_state(%rip)
	jmp	.L72
.L71:
	.loc 1 437 17
	leaq	-96(%rbp), %rdx
	movq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	find_space
	movq	%rax, -88(%rbp)
	.loc 1 439 5
	cmpq	$0, -88(%rbp)
	jne	.L73
	.loc 1 441 10
	movl	$0, %eax
	jmp	.L79
.L73:
	.loc 1 444 3
	movq	-88(%rbp), %rax
	movq	%rax, %rdi
	call	add_heap_chunk
	.loc 1 446 3
	movq	-104(%rbp), %rax
	movq	%rax, %rdi
	call	heap_free
.L72:
	.loc 1 449 26
	movq	-112(%rbp), %rax
	addq	$56, %rax
	.loc 1 449 18
	movq	%rax, -64(%rbp)
	.loc 1 450 5
	movq	-96(%rbp), %rax
	.loc 1 450 4
	testq	%rax, %rax
	jne	.L74
	.loc 1 452 3
	movq	-88(%rbp), %rax
	movq	%rax, %rdi
	call	add_heap_chunk
	jmp	.L75
.L74:
	.loc 1 456 29
	movq	-96(%rbp), %rax
	movq	(%rax), %rax
	.loc 1 456 19
	movq	%rax, -64(%rbp)
	.loc 1 457 16
	movq	-96(%rbp), %rax
	movq	40(%rax), %rax
	.loc 1 457 7
	testq	%rax, %rax
	je	.L76
	.loc 1 457 33 discriminator 1
	movq	-96(%rbp), %rdx
	.loc 1 457 14 discriminator 1
	movq	-96(%rbp), %rax
	movq	40(%rax), %rax
	.loc 1 457 33 discriminator 1
	movq	48(%rdx), %rdx
	.loc 1 457 23 discriminator 1
	movq	%rdx, 48(%rax)
.L76:
	.loc 1 457 52 discriminator 3
	movq	-96(%rbp), %rax
	movq	48(%rax), %rax
	.loc 1 457 43 discriminator 3
	testq	%rax, %rax
	je	.L75
	.loc 1 457 33 discriminator 4
	movq	-96(%rbp), %rdx
	.loc 1 457 14 discriminator 4
	movq	-96(%rbp), %rax
	movq	48(%rax), %rax
	.loc 1 457 33 discriminator 4
	movq	40(%rdx), %rdx
	.loc 1 457 23 discriminator 4
	movq	%rdx, 40(%rax)
.L75:
	.loc 1 459 18
	movq	$0, -24(%rbp)
	.loc 1 459 17
	movq	$0, -16(%rbp)
	.loc 1 459 19
	movb	$1, -39(%rbp)
	.loc 1 459 51
	movq	$0, -48(%rbp)
	.loc 1 459 77
	movb	$1, -40(%rbp)
	.loc 1 461 18
	movq	-80(%rbp), %rax
	movq	32(%rax), %rax
	.loc 1 461 4
	testq	%rax, %rax
	jne	.L77
	.loc 1 463 25
	movq	-80(%rbp), %rax
	movq	%rax, -32(%rbp)
	jmp	.L78
.L77:
	.loc 1 467 40
	movq	-80(%rbp), %rax
	movq	32(%rax), %rax
	.loc 1 467 25
	movq	%rax, -32(%rbp)
.L78:
	.loc 1 469 2
	leaq	-64(%rbp), %rcx
	movq	-88(%rbp), %rax
	movl	$56, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	memcopy@PLT
	.loc 1 470 98
	movq	-80(%rbp), %rax
	movq	(%rax), %rax
	.loc 1 470 2
	leaq	-56(%rax), %rdx
	.loc 1 470 19
	movq	-88(%rbp), %rax
	.loc 1 470 45
	addq	$56, %rax
	.loc 1 470 2
	movq	%rax, %rcx
	movq	-104(%rbp), %rax
	movq	%rax, %rsi
	movq	%rcx, %rdi
	call	memcopy@PLT
	.loc 1 472 18
	movq	-88(%rbp), %rax
	.loc 1 472 44
	addq	$56, %rax
.L79:
	.loc 1 473 1 discriminator 1
	movq	-8(%rbp), %rdx
	subq	%fs:40, %rdx
	je	.L80
	.loc 1 473 1 is_stmt 0
	call	__stack_chk_fail@PLT
.L80:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE21:
	.size	heap_realloc, .-heap_realloc
.Letext0:
	.file 2 "heap/memory.h"
	.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 4 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
	.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
	.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
	.file 7 "heap/moremem.h"
	.file 8 "heap/heap.h"
	.file 9 "/usr/include/stdio.h"
	.file 10 "/usr/include/stdlib.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x9be
	.value	0x5
	.byte	0x1
	.byte	0x8
	.long	.Ldebug_abbrev0
	.uleb128 0x1b
	.long	.LASF119
	.byte	0x1d
	.long	.LASF0
	.long	.LASF1
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x6
	.long	.LASF2
	.byte	0x2
	.byte	0x6
	.byte	0xe
	.long	0x3a
	.uleb128 0x5
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x1c
	.long	0x3a
	.uleb128 0x6
	.long	.LASF3
	.byte	0x2
	.byte	0x7
	.byte	0x17
	.long	0x52
	.uleb128 0x5
	.byte	0x8
	.byte	0x7
	.long	.LASF5
	.uleb128 0x5
	.byte	0x1
	.byte	0x8
	.long	.LASF6
	.uleb128 0x5
	.byte	0x2
	.byte	0x7
	.long	.LASF7
	.uleb128 0x5
	.byte	0x4
	.byte	0x7
	.long	.LASF8
	.uleb128 0x5
	.byte	0x1
	.byte	0x6
	.long	.LASF9
	.uleb128 0x5
	.byte	0x2
	.byte	0x5
	.long	.LASF10
	.uleb128 0x1d
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x5
	.byte	0x8
	.byte	0x5
	.long	.LASF11
	.uleb128 0x6
	.long	.LASF12
	.byte	0x3
	.byte	0x98
	.byte	0x12
	.long	0x83
	.uleb128 0x6
	.long	.LASF13
	.byte	0x3
	.byte	0x99
	.byte	0x12
	.long	0x83
	.uleb128 0x1e
	.byte	0x8
	.uleb128 0x4
	.long	0x3a
	.uleb128 0x6
	.long	.LASF14
	.byte	0x4
	.byte	0xd1
	.byte	0x1b
	.long	0x52
	.uleb128 0xc
	.long	.LASF52
	.byte	0xd8
	.byte	0x5
	.byte	0x31
	.byte	0x8
	.long	0x23c
	.uleb128 0x1
	.long	.LASF15
	.byte	0x5
	.byte	0x33
	.byte	0x7
	.long	0x7c
	.byte	0
	.uleb128 0x1
	.long	.LASF16
	.byte	0x5
	.byte	0x36
	.byte	0x9
	.long	0xa4
	.byte	0x8
	.uleb128 0x1
	.long	.LASF17
	.byte	0x5
	.byte	0x37
	.byte	0x9
	.long	0xa4
	.byte	0x10
	.uleb128 0x1
	.long	.LASF18
	.byte	0x5
	.byte	0x38
	.byte	0x9
	.long	0xa4
	.byte	0x18
	.uleb128 0x1
	.long	.LASF19
	.byte	0x5
	.byte	0x39
	.byte	0x9
	.long	0xa4
	.byte	0x20
	.uleb128 0x1
	.long	.LASF20
	.byte	0x5
	.byte	0x3a
	.byte	0x9
	.long	0xa4
	.byte	0x28
	.uleb128 0x1
	.long	.LASF21
	.byte	0x5
	.byte	0x3b
	.byte	0x9
	.long	0xa4
	.byte	0x30
	.uleb128 0x1
	.long	.LASF22
	.byte	0x5
	.byte	0x3c
	.byte	0x9
	.long	0xa4
	.byte	0x38
	.uleb128 0x1
	.long	.LASF23
	.byte	0x5
	.byte	0x3d
	.byte	0x9
	.long	0xa4
	.byte	0x40
	.uleb128 0x1
	.long	.LASF24
	.byte	0x5
	.byte	0x40
	.byte	0x9
	.long	0xa4
	.byte	0x48
	.uleb128 0x1
	.long	.LASF25
	.byte	0x5
	.byte	0x41
	.byte	0x9
	.long	0xa4
	.byte	0x50
	.uleb128 0x1
	.long	.LASF26
	.byte	0x5
	.byte	0x42
	.byte	0x9
	.long	0xa4
	.byte	0x58
	.uleb128 0x1
	.long	.LASF27
	.byte	0x5
	.byte	0x44
	.byte	0x16
	.long	0x255
	.byte	0x60
	.uleb128 0x1
	.long	.LASF28
	.byte	0x5
	.byte	0x46
	.byte	0x14
	.long	0x25a
	.byte	0x68
	.uleb128 0x1
	.long	.LASF29
	.byte	0x5
	.byte	0x48
	.byte	0x7
	.long	0x7c
	.byte	0x70
	.uleb128 0x1
	.long	.LASF30
	.byte	0x5
	.byte	0x49
	.byte	0x7
	.long	0x7c
	.byte	0x74
	.uleb128 0x1
	.long	.LASF31
	.byte	0x5
	.byte	0x4a
	.byte	0xb
	.long	0x8a
	.byte	0x78
	.uleb128 0x1
	.long	.LASF32
	.byte	0x5
	.byte	0x4d
	.byte	0x12
	.long	0x60
	.byte	0x80
	.uleb128 0x1
	.long	.LASF33
	.byte	0x5
	.byte	0x4e
	.byte	0xf
	.long	0x6e
	.byte	0x82
	.uleb128 0x1
	.long	.LASF34
	.byte	0x5
	.byte	0x4f
	.byte	0x8
	.long	0x25f
	.byte	0x83
	.uleb128 0x1
	.long	.LASF35
	.byte	0x5
	.byte	0x51
	.byte	0xf
	.long	0x26f
	.byte	0x88
	.uleb128 0x1
	.long	.LASF36
	.byte	0x5
	.byte	0x59
	.byte	0xd
	.long	0x96
	.byte	0x90
	.uleb128 0x1
	.long	.LASF37
	.byte	0x5
	.byte	0x5b
	.byte	0x17
	.long	0x279
	.byte	0x98
	.uleb128 0x1
	.long	.LASF38
	.byte	0x5
	.byte	0x5c
	.byte	0x19
	.long	0x283
	.byte	0xa0
	.uleb128 0x1
	.long	.LASF39
	.byte	0x5
	.byte	0x5d
	.byte	0x14
	.long	0x25a
	.byte	0xa8
	.uleb128 0x1
	.long	.LASF40
	.byte	0x5
	.byte	0x5e
	.byte	0x9
	.long	0xa2
	.byte	0xb0
	.uleb128 0x1
	.long	.LASF41
	.byte	0x5
	.byte	0x5f
	.byte	0xa
	.long	0xa9
	.byte	0xb8
	.uleb128 0x1
	.long	.LASF42
	.byte	0x5
	.byte	0x60
	.byte	0x7
	.long	0x7c
	.byte	0xc0
	.uleb128 0x1
	.long	.LASF43
	.byte	0x5
	.byte	0x62
	.byte	0x8
	.long	0x288
	.byte	0xc4
	.byte	0
	.uleb128 0x6
	.long	.LASF44
	.byte	0x6
	.byte	0x7
	.byte	0x19
	.long	0xb5
	.uleb128 0x1f
	.long	.LASF120
	.byte	0x5
	.byte	0x2b
	.byte	0xe
	.uleb128 0xd
	.long	.LASF45
	.uleb128 0x4
	.long	0x250
	.uleb128 0x4
	.long	0xb5
	.uleb128 0xa
	.long	0x3a
	.long	0x26f
	.uleb128 0xe
	.long	0x52
	.byte	0
	.byte	0
	.uleb128 0x4
	.long	0x248
	.uleb128 0xd
	.long	.LASF46
	.uleb128 0x4
	.long	0x274
	.uleb128 0xd
	.long	.LASF47
	.uleb128 0x4
	.long	0x27e
	.uleb128 0xa
	.long	0x3a
	.long	0x298
	.uleb128 0xe
	.long	0x52
	.byte	0x13
	.byte	0
	.uleb128 0x4
	.long	0x23c
	.uleb128 0x15
	.long	.LASF67
	.byte	0x9
	.byte	0x91
	.byte	0xe
	.long	0x298
	.uleb128 0x20
	.long	.LASF121
	.byte	0x7
	.byte	0x4
	.long	0x67
	.byte	0x7
	.byte	0x11
	.byte	0xe
	.long	0x2ce
	.uleb128 0xf
	.long	.LASF48
	.byte	0
	.uleb128 0xf
	.long	.LASF49
	.byte	0x1
	.uleb128 0xf
	.long	.LASF50
	.byte	0x2
	.byte	0
	.uleb128 0x6
	.long	.LASF51
	.byte	0x7
	.byte	0x16
	.byte	0x3
	.long	0x2a9
	.uleb128 0xc
	.long	.LASF53
	.byte	0x20
	.byte	0x7
	.byte	0x18
	.byte	0x10
	.long	0x31c
	.uleb128 0x1
	.long	.LASF54
	.byte	0x7
	.byte	0x1a
	.byte	0xf
	.long	0x2ce
	.byte	0
	.uleb128 0x10
	.string	"ptr"
	.byte	0x7
	.byte	0x1b
	.byte	0xb
	.long	0xa2
	.byte	0x8
	.uleb128 0x1
	.long	.LASF55
	.byte	0x7
	.byte	0x1c
	.byte	0xb
	.long	0x46
	.byte	0x10
	.uleb128 0x1
	.long	.LASF56
	.byte	0x7
	.byte	0x1d
	.byte	0xb
	.long	0x46
	.byte	0x18
	.byte	0
	.uleb128 0x6
	.long	.LASF57
	.byte	0x7
	.byte	0x1e
	.byte	0x3
	.long	0x2da
	.uleb128 0x21
	.long	.LASF58
	.value	0x3c8
	.byte	0x8
	.byte	0x21
	.byte	0x10
	.long	0x392
	.uleb128 0x1
	.long	.LASF59
	.byte	0x8
	.byte	0x23
	.byte	0x8
	.long	0xa2
	.byte	0
	.uleb128 0x1
	.long	.LASF60
	.byte	0x8
	.byte	0x24
	.byte	0x8
	.long	0xa2
	.byte	0x8
	.uleb128 0x1
	.long	.LASF61
	.byte	0x8
	.byte	0x26
	.byte	0x8
	.long	0x46
	.byte	0x10
	.uleb128 0x1
	.long	.LASF62
	.byte	0x8
	.byte	0x28
	.byte	0x8
	.long	0x392
	.byte	0x18
	.uleb128 0x11
	.long	.LASF63
	.byte	0x29
	.byte	0x7
	.long	0x83
	.value	0x1a8
	.uleb128 0x11
	.long	.LASF64
	.byte	0x2b
	.byte	0xb
	.long	0x31c
	.value	0x1b0
	.uleb128 0x11
	.long	.LASF65
	.byte	0x2d
	.byte	0x7
	.long	0x3a2
	.value	0x1d0
	.byte	0
	.uleb128 0xa
	.long	0xa2
	.long	0x3a2
	.uleb128 0xe
	.long	0x52
	.byte	0x31
	.byte	0
	.uleb128 0xa
	.long	0x3a
	.long	0x3b3
	.uleb128 0x22
	.long	0x52
	.value	0x1f3
	.byte	0
	.uleb128 0x6
	.long	.LASF66
	.byte	0x8
	.byte	0x2f
	.byte	0x3
	.long	0x328
	.uleb128 0x15
	.long	.LASF68
	.byte	0x8
	.byte	0x31
	.byte	0x12
	.long	0x3b3
	.uleb128 0xc
	.long	.LASF69
	.byte	0x38
	.byte	0x8
	.byte	0x35
	.byte	0x10
	.long	0x43f
	.uleb128 0x1
	.long	.LASF70
	.byte	0x8
	.byte	0x37
	.byte	0x8
	.long	0x46
	.byte	0
	.uleb128 0x1
	.long	.LASF71
	.byte	0x8
	.byte	0x38
	.byte	0x8
	.long	0x46
	.byte	0x8
	.uleb128 0x1
	.long	.LASF72
	.byte	0x8
	.byte	0x39
	.byte	0x8
	.long	0x46
	.byte	0x10
	.uleb128 0x1
	.long	.LASF73
	.byte	0x8
	.byte	0x3a
	.byte	0x7
	.long	0x2e
	.byte	0x18
	.uleb128 0x1
	.long	.LASF74
	.byte	0x8
	.byte	0x3b
	.byte	0x7
	.long	0x2e
	.byte	0x19
	.uleb128 0x1
	.long	.LASF75
	.byte	0x8
	.byte	0x3c
	.byte	0x14
	.long	0x43f
	.byte	0x20
	.uleb128 0x10
	.string	"fd"
	.byte	0x8
	.byte	0x3d
	.byte	0x14
	.long	0x43f
	.byte	0x28
	.uleb128 0x10
	.string	"bk"
	.byte	0x8
	.byte	0x3e
	.byte	0x14
	.long	0x43f
	.byte	0x30
	.byte	0
	.uleb128 0x4
	.long	0x3cb
	.uleb128 0x6
	.long	.LASF76
	.byte	0x8
	.byte	0x3f
	.byte	0x3
	.long	0x3cb
	.uleb128 0x5
	.byte	0x8
	.byte	0x5
	.long	.LASF77
	.uleb128 0x5
	.byte	0x8
	.byte	0x7
	.long	.LASF78
	.uleb128 0x23
	.long	0x3bf
	.byte	0x1
	.byte	0x38
	.byte	0xb
	.uleb128 0x9
	.byte	0x3
	.quad	halloc_heap_state
	.uleb128 0x12
	.long	.LASF79
	.byte	0xa
	.long	0x48a
	.uleb128 0x3
	.long	0xa2
	.uleb128 0x3
	.long	0x3a
	.uleb128 0x3
	.long	0x46
	.byte	0
	.uleb128 0x12
	.long	.LASF80
	.byte	0xb
	.long	0x49f
	.uleb128 0x3
	.long	0xa4
	.uleb128 0x3
	.long	0x46
	.byte	0
	.uleb128 0x24
	.long	.LASF83
	.byte	0x9
	.value	0x164
	.byte	0xc
	.long	0x7c
	.long	0x4b7
	.uleb128 0x3
	.long	0x4b7
	.uleb128 0x16
	.byte	0
	.uleb128 0x4
	.long	0x41
	.uleb128 0x25
	.long	.LASF81
	.byte	0x7
	.byte	0x21
	.byte	0xa
	.long	0x31c
	.long	0x4ce
	.uleb128 0x16
	.byte	0
	.uleb128 0x12
	.long	.LASF82
	.byte	0x9
	.long	0x4e8
	.uleb128 0x3
	.long	0xa2
	.uleb128 0x3
	.long	0xa2
	.uleb128 0x3
	.long	0x46
	.byte	0
	.uleb128 0x17
	.long	.LASF84
	.byte	0x2
	.byte	0xc
	.byte	0x7
	.long	0x46
	.long	0x4fe
	.uleb128 0x3
	.long	0xa4
	.byte	0
	.uleb128 0x17
	.long	.LASF85
	.byte	0x7
	.byte	0x24
	.byte	0xb
	.long	0x2ce
	.long	0x519
	.uleb128 0x3
	.long	0x519
	.uleb128 0x3
	.long	0x46
	.byte	0
	.uleb128 0x4
	.long	0x31c
	.uleb128 0x26
	.long	.LASF122
	.byte	0xa
	.value	0x256
	.byte	0xd
	.uleb128 0x27
	.long	.LASF86
	.byte	0x9
	.value	0x324
	.byte	0xd
	.long	0x53a
	.uleb128 0x3
	.long	0x4b7
	.byte	0
	.uleb128 0x13
	.long	.LASF95
	.value	0x19b
	.long	0xa2
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0x5cc
	.uleb128 0x18
	.string	"mem"
	.value	0x19b
	.byte	0x1a
	.long	0xa2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0xb
	.long	.LASF70
	.value	0x19b
	.byte	0x25
	.long	0x46
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2
	.long	.LASF87
	.value	0x19d
	.byte	0xa
	.long	0x5cc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2
	.long	.LASF88
	.value	0x19e
	.byte	0x8
	.long	0xa2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2
	.long	.LASF89
	.value	0x19f
	.byte	0xa
	.long	0x5cc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2
	.long	.LASF90
	.value	0x1a0
	.byte	0x8
	.long	0x46
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2
	.long	.LASF91
	.value	0x1a1
	.byte	0x9
	.long	0x444
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x4
	.long	0x444
	.uleb128 0x28
	.long	.LASF102
	.byte	0x1
	.value	0x16a
	.byte	0x6
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x63a
	.uleb128 0x18
	.string	"mem"
	.value	0x16a
	.byte	0x16
	.long	0xa2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2
	.long	.LASF92
	.value	0x16c
	.byte	0xa
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2
	.long	.LASF93
	.value	0x16d
	.byte	0xa
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x29
	.long	.LASF98
	.byte	0x1
	.value	0x16e
	.byte	0xa
	.long	0x5cc
	.uleb128 0x2
	.long	.LASF94
	.value	0x16f
	.byte	0xa
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x13
	.long	.LASF96
	.value	0x143
	.long	0xa2
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x69c
	.uleb128 0xb
	.long	.LASF70
	.value	0x143
	.byte	0x1b
	.long	0x46
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2
	.long	.LASF89
	.value	0x145
	.byte	0xa
	.long	0x5cc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2
	.long	.LASF88
	.value	0x146
	.byte	0x8
	.long	0xa2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2
	.long	.LASF91
	.value	0x147
	.byte	0x9
	.long	0x444
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x13
	.long	.LASF97
	.value	0x123
	.long	0xa2
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x709
	.uleb128 0xb
	.long	.LASF70
	.value	0x123
	.byte	0x18
	.long	0x46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0xb
	.long	.LASF98
	.value	0x123
	.byte	0x27
	.long	0x709
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2
	.long	.LASF99
	.value	0x125
	.byte	0x8
	.long	0x46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2
	.long	.LASF100
	.value	0x127
	.byte	0x8
	.long	0xa2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2
	.long	.LASF88
	.value	0x128
	.byte	0x8
	.long	0xa2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x4
	.long	0x5cc
	.uleb128 0x19
	.long	.LASF101
	.byte	0xf3
	.long	0xa2
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x74b
	.uleb128 0x8
	.long	.LASF70
	.byte	0xf3
	.byte	0x20
	.long	0x46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.string	"ptr"
	.byte	0xf5
	.byte	0xa
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x14
	.long	.LASF103
	.byte	0xe5
	.byte	0xb
	.long	0x3b3
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0x77c
	.uleb128 0x9
	.long	.LASF104
	.byte	0xe7
	.byte	0xf
	.long	0x3b3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -992
	.byte	0
	.uleb128 0x14
	.long	.LASF105
	.byte	0xca
	.byte	0x9
	.long	0x5cc
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x7ac
	.uleb128 0x7
	.string	"ptr"
	.byte	0xcc
	.byte	0xa
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2a
	.long	.LASF116
	.byte	0x1
	.byte	0xa3
	.byte	0x6
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.long	0x7d9
	.uleb128 0x7
	.string	"ptr"
	.byte	0xa5
	.byte	0xa
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x14
	.long	.LASF106
	.byte	0x8f
	.byte	0x9
	.long	0x5cc
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x809
	.uleb128 0x7
	.string	"ptr"
	.byte	0x95
	.byte	0xa
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2b
	.long	.LASF107
	.byte	0x1
	.byte	0x7f
	.byte	0x5
	.long	0x83a
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x83a
	.uleb128 0x7
	.string	"ptr"
	.byte	0x81
	.byte	0xa
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x5
	.byte	0x1
	.byte	0x2
	.long	.LASF108
	.uleb128 0x2c
	.long	.LASF109
	.byte	0x1
	.byte	0x79
	.byte	0x7
	.long	0x46
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x880
	.uleb128 0x8
	.long	.LASF92
	.byte	0x79
	.byte	0x2b
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x9
	.long	.LASF90
	.byte	0x7b
	.byte	0x8
	.long	0x46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2d
	.long	.LASF110
	.byte	0x1
	.byte	0x67
	.byte	0x6
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x907
	.uleb128 0x8
	.long	.LASF111
	.byte	0x67
	.byte	0x17
	.long	0x75
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1a
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0x7
	.string	"i"
	.byte	0x6a
	.byte	0xc
	.long	0x46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1a
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.uleb128 0x9
	.long	.LASF112
	.byte	0x6c
	.byte	0xb
	.long	0x5cc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	.LASF70
	.byte	0x6d
	.byte	0x9
	.long	0x46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	.LASF74
	.byte	0x6e
	.byte	0x8
	.long	0x2e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -41
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2e
	.long	.LASF113
	.byte	0x1
	.byte	0x5d
	.byte	0x6
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.long	0x934
	.uleb128 0x8
	.long	.LASF92
	.byte	0x5d
	.byte	0x1b
	.long	0xa2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x2f
	.long	.LASF123
	.byte	0x1
	.byte	0x56
	.byte	0x6
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x19
	.long	.LASF114
	.byte	0x4c
	.long	0x46
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x989
	.uleb128 0x8
	.long	.LASF115
	.byte	0x4c
	.byte	0x18
	.long	0x46
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.string	"s"
	.byte	0x4e
	.byte	0xc
	.long	0x2ce
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x30
	.long	.LASF117
	.byte	0x1
	.byte	0x44
	.byte	0x6
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x31
	.string	"msg"
	.byte	0x1
	.byte	0x44
	.byte	0x1d
	.long	0x4b7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x8
	.long	.LASF118
	.byte	0x44
	.byte	0x2e
	.long	0x4b7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 6
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x1f
	.uleb128 0x1b
	.uleb128 0x1f
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF34:
	.string	"_shortbuf"
.LASF56:
	.string	"usedSize"
.LASF120:
	.string	"_IO_lock_t"
.LASF67:
	.string	"stderr"
.LASF23:
	.string	"_IO_buf_end"
.LASF89:
	.string	"previous"
.LASF111:
	.string	"print_mem"
.LASF112:
	.string	"current_heap_chunk"
.LASF21:
	.string	"_IO_write_end"
.LASF8:
	.string	"unsigned int"
.LASF82:
	.string	"memcopy"
.LASF93:
	.string	"next"
.LASF39:
	.string	"_freeres_list"
.LASF73:
	.string	"prev_used"
.LASF15:
	.string	"_flags"
.LASF102:
	.string	"heap_free"
.LASF55:
	.string	"memSize"
.LASF123:
	.string	"initHeap"
.LASF103:
	.string	"create_heap"
.LASF27:
	.string	"_markers"
.LASF59:
	.string	"top_heap_ptr"
.LASF65:
	.string	"errorBuffer"
.LASF60:
	.string	"wilderness_ptr"
.LASF98:
	.string	"prev"
.LASF50:
	.string	"MORE_MEMORY_STATE_FAILED"
.LASF79:
	.string	"memfill"
.LASF100:
	.string	"space_search_in_bins"
.LASF92:
	.string	"chunk"
.LASF49:
	.string	"MORE_MEMORY_STATE_MMAPED"
.LASF84:
	.string	"stringlength"
.LASF26:
	.string	"_IO_save_end"
.LASF48:
	.string	"MORE_MEMORY_STATE_NONE"
.LASF46:
	.string	"_IO_codecvt"
.LASF78:
	.string	"long long unsigned int"
.LASF53:
	.string	"MoreMemoryData"
.LASF95:
	.string	"heap_realloc"
.LASF91:
	.string	"heap_chunk"
.LASF25:
	.string	"_IO_backup_base"
.LASF36:
	.string	"_offset"
.LASF104:
	.string	"heap"
.LASF29:
	.string	"_fileno"
.LASF74:
	.string	"used"
.LASF122:
	.string	"abort"
.LASF14:
	.string	"size_t"
.LASF90:
	.string	"offset"
.LASF97:
	.string	"find_space"
.LASF18:
	.string	"_IO_read_base"
.LASF108:
	.string	"_Bool"
.LASF72:
	.string	"prev_size"
.LASF20:
	.string	"_IO_write_ptr"
.LASF94:
	.string	"binListLastBeforeFree"
.LASF51:
	.string	"mmemState"
.LASF57:
	.string	"mmemData"
.LASF121:
	.string	"MoreMemoryState"
.LASF64:
	.string	"mmdata"
.LASF115:
	.string	"addsize"
.LASF61:
	.string	"heap_size"
.LASF4:
	.string	"char"
.LASF42:
	.string	"_mode"
.LASF45:
	.string	"_IO_marker"
.LASF16:
	.string	"_IO_read_ptr"
.LASF66:
	.string	"heapstate"
.LASF62:
	.string	"chunks"
.LASF106:
	.string	"first_bin_list"
.LASF63:
	.string	"chunks_len"
.LASF19:
	.string	"_IO_write_base"
.LASF116:
	.string	"print_bin_list"
.LASF77:
	.string	"long long int"
.LASF86:
	.string	"perror"
.LASF83:
	.string	"printf"
.LASF24:
	.string	"_IO_save_base"
.LASF99:
	.string	"csize"
.LASF70:
	.string	"size"
.LASF40:
	.string	"_freeres_buf"
.LASF41:
	.string	"__pad5"
.LASF68:
	.string	"halloc_heap_state"
.LASF33:
	.string	"_vtable_offset"
.LASF69:
	.string	"HeapChunk"
.LASF101:
	.string	"find_space_in_bins"
.LASF58:
	.string	"Heap"
.LASF76:
	.string	"hchunk"
.LASF96:
	.string	"heap_allocate"
.LASF110:
	.string	"print_heap"
.LASF17:
	.string	"_IO_read_end"
.LASF10:
	.string	"short int"
.LASF11:
	.string	"long int"
.LASF71:
	.string	"org_size"
.LASF47:
	.string	"_IO_wide_data"
.LASF3:
	.string	"ulong"
.LASF107:
	.string	"empty_bin_list"
.LASF113:
	.string	"add_heap_chunk"
.LASF38:
	.string	"_wide_data"
.LASF35:
	.string	"_lock"
.LASF5:
	.string	"long unsigned int"
.LASF31:
	.string	"_old_offset"
.LASF88:
	.string	"created_ptr"
.LASF52:
	.string	"_IO_FILE"
.LASF109:
	.string	"chunk_end_wilderness_offset"
.LASF75:
	.string	"alloc_base"
.LASF2:
	.string	"byte"
.LASF6:
	.string	"unsigned char"
.LASF81:
	.string	"mmem_createMemorySpace"
.LASF118:
	.string	"function"
.LASF119:
	.string	"GNU C17 11.3.0 -mtune=generic -march=x86-64 -g -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection -fcf-protection"
.LASF117:
	.string	"abortError"
.LASF54:
	.string	"state"
.LASF80:
	.string	"print_buffer"
.LASF37:
	.string	"_codecvt"
.LASF114:
	.string	"extendHeap"
.LASF12:
	.string	"__off_t"
.LASF9:
	.string	"signed char"
.LASF7:
	.string	"short unsigned int"
.LASF85:
	.string	"mmem_extend"
.LASF28:
	.string	"_chain"
.LASF87:
	.string	"current_chunk"
.LASF44:
	.string	"FILE"
.LASF105:
	.string	"bin_list_last"
.LASF30:
	.string	"_flags2"
.LASF32:
	.string	"_cur_column"
.LASF13:
	.string	"__off64_t"
.LASF43:
	.string	"_unused2"
.LASF22:
	.string	"_IO_buf_base"
	.section	.debug_line_str,"MS",@progbits,1
.LASF1:
	.string	"/home/user/Lab/programming/heap"
.LASF0:
	.string	"heap/heap.c"
	.ident	"GCC: (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
